{"version":3,"sources":["components/Header/Header.js","components/Steps/Steps.js","components/Feeling/Feeling.js","components/Content/Content.js","components/Supported/Supported.js","components/Comment/Comment.js","components/Review/Review.js","components/Confirmation/Confirmation.js","components/Feedback/Feedback.js","components/Admin/Admin.js","components/App/App.js","registerServiceWorker.js","components/redux/reducers/feeling.reducer.js","components/redux/reducers/content.reducer.js","components/redux/reducers/supported.reducer.js","components/redux/reducers/comment.reducer.js","index.js"],"names":["styles","largeIcon","fontSize","Header","react_default","a","createElement","className","Stars_default","style","Component","headerStyle","borderBottom","display","padding","color","fontWeight","Steps","this","props","step","Feeling","state","feeling","getInitialRating","num","Number","_this","handleNext","event","data","dispatch","type","payload","history","push","handleStarClick","value","setState","components_Steps_Steps","react_rating_default","initialRating","onClick","emptySymbol","StarBorder_default","fullSymbol","Star_default","connect","store","Content","content","Supported","supported","Comment","comment","handleChange","target","onChange","placeholder","Review","requiredFieldsError","submitFeedback","support","String","axios","post","then","res","catch","err","console","log","isEnabled","disabled","reduxStore","withRouter","Confirmation","handleClick","iconStyle","cursor","Feedback","deleteFeedback","id","delete","concat","refreshFeedbackTable","_this2","feedback","understanding","comments","DeleteSweep_default","e","window","confirm","Admin","get","feedbackResult","reverse","map","feed","components_Feedback_Feedback","key","App","HashRouter","components_Header_Header","Route","path","exact","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","arguments","length","undefined","action","storeInstance","createStore","combineReducers","applyMiddleware","logger","ReactDOM","render","es","components_App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c31dfd38.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Stars from '@material-ui/icons/Stars';\nimport './Header.css';\n\nconst styles = {\n  largeIcon: {\n    fontSize: '4rem'\n  }\n};\n\nclass Header extends Component {\n  render() {\n    return (\n      <header className=\"App-header\">\n        <div className=\"container\">\n          <Stars style={styles.largeIcon} className=\"star-header\" />\n          <h1 className=\"App-title\">Feedback</h1>\n        </div>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\n// Styling for steps header\nconst headerStyle = {\n  borderBottom: '2px solid #5adbcf',\n  display: 'inline-block',\n  padding: '8px',\n  color: '#5adbcf',\n  fontWeight: '300'\n}\n\nclass Steps extends Component {\n  render() {\n    return(\n      <div>\n        <h3 style={headerStyle}>Step <span>{this.props.step}</span> of 4</h3>\n      </div>\n    );\n  }\n}\n\nexport default Steps;","import React, { Component } from 'react';\nimport Steps from '../Steps/Steps';\nimport Rating from 'react-rating';\nimport './Feeling.css';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { connect } from 'react-redux';\n\nconst styles = {\n  largeIcon: {\n    fontSize: '4rem'\n  }\n}\n\nclass Feeling extends Component {\n\n  state = {\n    feeling: 0\n  }\n\n  getInitialRating = () => {\n    // Keep star rating selected by user\n    // Convert arr to number \n    let num = Number(this.props.feeling);\n    return this.state.feeling === 0 ? num : this.state.feeling;\n  }\n\n  // Next button handler\n  handleNext = (event) => {\n    let data;\n    // Check if state is 0\n    if(this.state.feeling === 0) {\n      // if 0, use redux store saved rating\n      data = this.props.feeling;\n    } else {\n      // Use updated rating\n      data = this.state.feeling;\n    }\n    this.props.dispatch({type: 'ADD_FEELING', payload: data});\n    this.props.history.push('/2');\n  }\n\n  // Set rating clicked by user\n  handleStarClick = (value) => {\n    this.setState({ feeling: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <Steps step={\"1\"} />\n        <h2>How are you feeling today?</h2>\n        {/* Star rating */}\n        <Rating\n          initialRating={this.getInitialRating()}\n          onClick={this.handleStarClick}\n          emptySymbol={<StarBorder style={styles.largeIcon} />}\n          fullSymbol={<Star style={styles.largeIcon} />}\n        />\n        <button onClick={this.handleNext}>Next</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    feeling: store.feeling\n  }\n}\n\nexport default connect(mapStateToProps)(Feeling);","import React, { Component } from 'react';\nimport Steps from '../Steps/Steps';\nimport Rating from 'react-rating';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { connect } from 'react-redux';\n\nconst styles = {\n  largeIcon: {\n    fontSize: '4rem'\n  }\n}\n\nclass Content extends Component {\n  state = {\n    content: 0\n  }\n\n  getInitialRating = () => {\n    // Keep star rating selected by user\n    // Convert arr to number \n    let num = Number(this.props.content);\n    return this.state.content === 0 ? num : this.state.content;\n  }\n\n  handleNext = (event) => {\n    let data;\n    // Check if state is 0\n    if(this.state.content === 0) {\n      // if 0, use redux store saved rating\n      data = this.props.content;\n    } else {\n      // Use updated rating\n      data = this.state.content;\n    }\n    this.props.dispatch({type: 'ADD_CONTENT', payload: data});\n    this.props.history.push('/3');\n  }\n\n  handleStarClick = (value) => {\n    this.setState({ content: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <Steps step={\"2\"} />\n        <h2>How well are you understanding the content?</h2>\n        {/* Star rating */}\n        <Rating\n          initialRating={this.getInitialRating()}\n          onClick={this.handleStarClick}\n          emptySymbol={<StarBorder style={styles.largeIcon} />}\n          fullSymbol={<Star style={styles.largeIcon} />}\n        />\n        <button onClick={this.handleNext}>Next</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    content: store.content\n  }\n}\n\nexport default connect(mapStateToProps)(Content);","import React, { Component } from 'react';\nimport Steps from '../Steps/Steps';\nimport Rating from 'react-rating';\nimport Star from '@material-ui/icons/Star';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport { connect } from 'react-redux';\n\nconst styles = {\n  largeIcon: {\n    fontSize: '4rem'\n  }\n}\n\nclass Supported extends Component {\n  state = {\n    supported: 0\n  }\n\n  getInitialRating = () => {\n    // Keep star rating selected by user\n    // Convert arr to number \n    let num = Number(this.props.supported);\n    return this.state.supported === 0 ? num : this.state.supported;\n  }\n  \n  handleNext = (event) => {\n    let data;\n    // Check if state is 0\n    if(this.state.supported === 0) {\n      // if 0, use redux store saved rating\n      data = this.props.supported;\n    } else {\n      // Use updated rating\n      data = this.state.supported;\n    }\n    this.props.dispatch({type: 'ADD_SUPPORTED', payload: data});\n    this.props.history.push('/4');\n  }\n\n  handleStarClick = (value) => {\n    this.setState({ supported: value });\n  }\n\n  render() {\n    return (\n      <div>\n        <Steps step={\"3\"} />\n        <h2>How well are you being supported?</h2>\n        {/* Star rating */}\n        <Rating\n          initialRating={this.getInitialRating()}\n          onClick={this.handleStarClick}\n          emptySymbol={<StarBorder style={styles.largeIcon} />}\n          fullSymbol={<Star style={styles.largeIcon} />}\n        />\n        <button onClick={this.handleNext}>Next</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    supported: store.supported\n  }\n}\n\nexport default connect(mapStateToProps)(Supported);","import React, { Component } from 'react';\nimport Steps from '../Steps/Steps';\nimport { connect } from 'react-redux';\nimport './Comment.css';\n\nclass Comment extends Component {\n  state = {\n    comment: ''\n  }\n\n  getInitialRating = () => {\n    // Keep comment entered by user\n    return this.state.comment === '' ? this.props.comment : this.state.feeling;\n  }\n\n  handleChange = (event) => {\n    this.setState({ comment: event.target.value });\n  }\n\n  handleNext = (event) => {\n    let data;\n    // Check if state is 0\n    if(this.state.comment === '') {\n      // if 0, use redux store saved rating\n      data = this.props.comment;\n    } else {\n      // Use updated rating\n      data = this.state.comment;\n    }\n    this.props.dispatch({type: 'ADD_COMMENT', payload: data});\n    this.props.history.push('/review');\n  }\n\n  render() {\n    return (\n      <div>\n        <Steps step={\"4\"} />\n        <h2>Any comments you want to leave?</h2>\n        {/* Enter comment */}\n        <textarea \n          onChange={this.handleChange} \n          placeholder=\"Enter your comment here...\"\n          value={this.getInitialRating()} />\n        <button onClick={this.handleNext}>Next</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  return {\n    comment: store.comment\n  }\n}\n\nexport default connect(mapStateToProps)(Comment);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nclass Review extends Component {\n\n  state = {\n    requiredFieldsError: false\n  }\n\n  componentDidMount() {\n    this.requiredFieldsError();\n  }\n\n  requiredFieldsError = () => {\n    // Check required fields\n    if (this.props.feeling > 0 &&\n      this.props.content > 0 &&\n      this.props.supported > 0) {\n      this.setState({ requiredFieldsError: false });\n    } else {\n      this.setState({ requiredFieldsError: true });\n    }\n  }\n\n  submitFeedback = () => {\n    // Create data object for POST call\n    const data = {\n      feeling: this.props.feeling,\n      content: this.props.content,\n      support: this.props.supported,\n      comment: String(this.props.comment)\n    }\n\n    axios.post('/submit', data)\n      .then(res => {\n        // Clear redux state\n        this.props.dispatch({ type: 'RESET_INFO' });\n        // Navigate to confirmation screen\n        this.props.history.push('/confirmation');\n      })\n      .catch(err => {\n        console.log('Error in POST ', err);\n      });\n  }\n\n  render() {\n    // Disable Submit button if user response not submitted \n    const isEnabled =\n      this.props.feeling > 0 &&\n      this.props.content > 0 &&\n      this.props.supported > 0;\n\n    return (\n      <div>\n        <h2>Review your feedback:</h2>\n        {/* Check if required fields are missing */}\n        {this.state.requiredFieldsError &&\n          <h3 className=\"reviewError\">\n            Please fill out required fields!\n          </h3>\n        }\n        {/* Display user response */}\n        <p>{(this.props.feeling > 0) ? '' : <span className=\"requiredFieldError\">*</span>}Feelings: <span className=\"reviewScore\">{this.props.feeling}</span></p>\n        <p>{(this.props.content > 0) ? '' : <span className=\"requiredFieldError\">*</span>}Understanding: <span className=\"reviewScore\">{this.props.content}</span></p>\n        <p>{(this.props.supported > 0) ? '' : <span className=\"requiredFieldError\">*</span>}Support: <span className=\"reviewScore\">{this.props.supported}</span></p>\n        <p>Comments: <span className=\"reviewScore\">{this.props.comment}</span></p>\n        <button disabled={!isEnabled} onClick={this.submitFeedback}>Submit</button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = reduxStore => {\n  return {\n    feeling: reduxStore.feeling,\n    content: reduxStore.content,\n    supported: reduxStore.supported,\n    comment: reduxStore.comment\n  }\n}\n\nexport default connect(mapStateToProps)(withRouter(Review));","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nclass Confirmation extends Component {\n  handleClick = () => {\n    this.props.history.push('/');\n  }\n  \n  render() {\n    return (\n      <div>\n        <h2>Thank you!</h2>\n        <button onClick={this.handleClick}>Leave New Feedback</button>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Confirmation);","import React, { Component } from 'react';\nimport DeleteSweep from '@material-ui/icons/DeleteSweep';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\n// Admin icon styles\nconst iconStyle = {\n  fontSize: '2rem',\n  cursor: 'pointer'\n}\n\nclass Feedback extends Component {\n\n  deleteFeedback = (id) => {\n    console.log('delete', id);\n    axios.delete(`/feedback/${id}`)\n      .then(res => {\n        console.log('Deleted');\n        this.props.refreshFeedbackTable();\n      })\n      .catch(err => {\n        console.log('error!');\n      })\n  }\n\n  render() {\n    let feedback = this.props.feedback;\n    return (\n      <tr>\n        <td>{feedback.feeling}</td>\n        <td>{feedback.understanding}</td>\n        <td>{feedback.support}</td>\n        <td>{feedback.comments}</td>\n        <td><DeleteSweep style={iconStyle} onClick={e => window.confirm('Are you sure you want to delete this?') && \n          this.deleteFeedback(feedback.id)}></DeleteSweep></td>\n      </tr>\n    )\n  }\n}\n\nexport default connect()(Feedback);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Feedback from '../Feedback/Feedback';\nimport axios from 'axios';\nimport './Admin.css';\n\nclass Admin extends Component {\n\n  state = {\n    feedback: []\n  }\n\n  componentDidMount() {\n    // this.props.dispatch({ type: 'GET_FEEDBACK'});\n    this.refreshFeedbackTable();\n  }\n\n  refreshFeedbackTable = () => {\n    axios.get('/feedback').then(res => {\n      this.setState({\n        feedback: res.data\n      });\n    });\n  }\n\n  render() {\n    let feedbackResult = this.state.feedback.reverse().map(feed => {\n      return <Feedback refreshFeedbackTable={this.refreshFeedbackTable} key={feed.id} feedback={feed} />;\n    })\n    return (\n      <div className=\"tableContainer\">\n        <h2>Feedback Results</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>Feeling</th>\n              <th>Comprehension</th>\n              <th>Support</th>\n              <th>Comments</th>\n              <th>Delete</th>\n            </tr>\n          </thead>\n          <tbody>\n            {feedbackResult}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default connect()(Admin);","import React, { Component } from 'react';\nimport Header from '../Header/Header';\nimport Feeling from '../Feeling/Feeling';\nimport Content from '../Content/Content';\nimport Supported from '../Supported/Supported';\nimport Comment from '../Comment/Comment';\nimport Review from '../Review/Review';\nimport Confirmation from '../Confirmation/Confirmation';\nimport Admin from '../Admin/Admin';\n\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route path=\"/\" exact component={Feeling}></Route>\n          <Route path=\"/2\" component={Content}></Route>\n          <Route path=\"/3\" component={Supported}></Route>\n          <Route path=\"/4\" component={Comment}></Route>\n          <Route path=\"/review\" component={Review}></Route>\n          <Route path=\"/confirmation\" component={Confirmation}></Route>\n          <Route path=\"/admin\" component={Admin}></Route>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const feeling = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD_FEELING':\n      return action.payload;\n    case 'RESET_INFO':\n      return [];\n    default:\n      return state;\n  }\n  \n}\n\nexport default feeling;","const content = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD_CONTENT':\n      return action.payload;\n    case 'RESET_INFO':\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport default content;","const supported = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD_SUPPORTED':\n      return action.payload;\n    case 'RESET_INFO':\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport default supported;","const comment = (state = [], action) => {\n  switch(action.type) {\n    case 'ADD_COMMENT':\n      return action.payload;\n    case 'RESET_INFO':\n      return [];\n    default:\n      return state;\n  }\n}\n\nexport default comment;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\n\n// Import reducers\nimport feeling from './components/redux/reducers/feeling.reducer';\nimport content from './components/redux/reducers/content.reducer';\nimport supported from './components/redux/reducers/supported.reducer';\nimport comment from './components/redux/reducers/comment.reducer';\n\nconst storeInstance = createStore(\n  combineReducers({\n    feeling,\n    content,\n    supported,\n    comment\n  }),\n  applyMiddleware(logger)\n)\n\nReactDOM.render(<Provider store={storeInstance}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}